os: linux
dist: xenial
language: elixir

cache:
  directories:
    - _build
    - deps
    - "${HOME}/bin"

env:
  - CAN_FAIL=false

jobs:
  allow_failures:
    env:
      - CAN_FAIL=true
      - VER_INFLUXDB=2.0.0-rc.3
      - INFLUX_TOKEN=instream_test

  include:
    - &test
      stage: test
      elixir: 1.7.4
      otp_release: 19.3
      env:
        - VER_INFLUXDB=1.4.3
      before_install: |-
        if [ ! -x "${HOME}/bin/influxd" ]; then
          mkdir -p "${HOME}/bin"

          wget "https://dl.influxdata.com/influxdb/releases/influxdb-${VER_INFLUXDB}_linux_amd64.tar.gz"
          tar -xzf  "influxdb-${VER_INFLUXDB}_linux_amd64.tar.gz"
          find influxdb-* -name influxd -type f -exec mv {} "${HOME}/bin" \;
        fi
      before_script: |-
        export INFLUXDB_SOCKET="$(pwd)/influxdb.sock"

        influxd config > ./influxdb.conf

        function start_influxdb {
          nohup "${HOME}/bin/influxd" \
              -pidfile ./influxdb.pid \
              -config ./influxdb.conf \
          >>./influxdb.stdout 2>>./influxdb.stderr &

          until curl -s -o /dev/null 'http://localhost:8086' 2>/dev/null; do
            sleep 1
          done
        }

        function stop_influxdb {
          if [ -f ./influxdb.pid ]; then
            kill $(cat ./influxdb.pid)
          fi

          while curl -d -o /dev/null 'http://localhost:8086' 2>/dev/null; do
            sleep 1
          done

          rm -f ./influxdb.pid
        }

        start_influxdb

        curl -XPOST 'http://localhost:8086/query' --data-urlencode "q=CREATE USER instream_test WITH PASSWORD 'instream_test' WITH ALL PRIVILEGES" -s -o /dev/null
        curl -XPOST 'http://localhost:8086/query' --data-urlencode "q=CREATE USER instream_guest WITH PASSWORD 'instream_guest'" -s -o /dev/null

        sed -i 's/auth-enabled = false/auth-enabled = true/' ./influxdb.conf
        sed -i 's/flux-enabled = false/flux-enabled = true/' ./influxdb.conf
        sed -i 's/unix-socket-enabled = false/unix-socket-enabled = true/' ./influxdb.conf

        sed -i "s|/var/run/influxdb.sock|${INFLUXDB_SOCKET}|g" ./influxdb.conf

        echo -e "[[udp]]\n  enabled = true\n  bind-address = \":8089\"\n  database = \"test_database\"\n  batch-size = 1000\n  batch-timeout = \"1s\"\n  batch-pending = 5\n" >> ./influxdb.conf

        stop_influxdb
        start_influxdb
      after_failure: |-
        echo '==> config <=='
        cat ./influxdb.conf
        echo '==> stdout <=='
        cat ./influxdb.stdout
        echo '==> stderr <=='
        cat ./influxdb.stderr
      after_script: |-
        if [ -f ./influxdb.pid ]; then
          kill $(cat ./influxdb.pid)
        fi
    - <<: *test
      elixir: 1.8.2
      otp_release: 20.3
      env:
        - VER_INFLUXDB=1.5.5
    - <<: *test
      elixir: 1.9.4
      otp_release: 21.3
      env:
        - VER_INFLUXDB=1.6.6
    - <<: *test
      elixir: 1.10.4
      otp_release: 22.3
      env:
        - VER_INFLUXDB=1.7.10
    - <<: *test
      elixir: 1.11.1
      otp_release: 23.0
      env:
        - VER_INFLUXDB=1.8.3
      after_success: mix coveralls.travis

    - stage: code quality
      elixir: 1.11.1
      otp_release: 23.0
      script:
        - mix format --check-formatted
        - mix credo --strict

    - <<: *test
      stage: influxdb2
      elixir: 1.11.1
      otp_release: 23.0
      env:
        - CAN_FAIL=true
        - VER_INFLUXDB=2.0.0-rc.3
        - INFLUX_TOKEN=instream_test
      before_script: |-
        function start_influxdb {
          nohup "${HOME}/bin/influxd" \
          >>./influxdb.stdout 2>>./influxdb.stderr &

          until curl -s -o /dev/null 'http://localhost:8086' 2>/dev/null; do
            sleep 1
          done
        }

        start_influxdb
        curl -XPOST http://localhost:8086/api/v2/setup -H 'accept: application/json' -d "{\"username\": \"instream_test\", \"password\": \"instream_test\", \"org\": \"instream_test\", \"bucket\": \"instream_test\", \"token\": \"${INFLUX_TOKEN}\"}" -s -o /dev/null
      script: mix test --trace --exclude udp
      after_failure: |-
        echo '==> stdout <=='
        cat ./influxdb.stdout
        echo '==> stderr <=='
        cat ./influxdb.stderr
      after_script: ps | grep 'influxd' | grep -v 'grep' | awk '{ print $1 }' | xargs kill
